{"version":3,"sources":["images/leftnav.png","LeftNav.jsx","Link.jsx","Links.jsx","PeritusAssistIncidentChart.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LeftNav","react_default","a","createElement","src","leftNav","alt","Link","props","style","color","selected","textDecoration","paddingLeft","href","url","name","padding","fontSize","display","Links","exampleData","response","status","data","Total Incidents","Peritus","Non Peritus","totalIncidents","reduce","total","dataPoint","peritusIncidents","PeritusAssistIncidentChart","backgroundColor","justifyContent","border","marginLeft","marginRight","toFixed","es6","width","height","margin","top","right","bottom","left","barCategoryGap","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","vertical","dataKey","type","stackId","fillOpacity","fill","mainStyle","verticalAlign","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.150f4532.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftnav.2ecf0bb9.png\";","import React from \"react\";\nimport leftNav from \"./images/leftnav.png\";\n\nexport default function LeftNav() {\n  return <img src={leftNav} alt=\"example navigation bar\" />;\n}\n","import React from \"react\";\n\nexport default function Link(props) {\n  const style = {\n    color: props.selected ? \"white\" : \"grey\",\n    textDecoration: \"none\",\n    paddingLeft: 15\n  };\n\n  return (\n    <a style={style} href={props.url}>\n      {props.name}\n    </a>\n  );\n}\n","import React from \"react\";\nimport Link from \"./Link\";\n\nconst style = {\n  padding: 15,\n  fontSize: \".8rem\",\n  display: \"inline\"\n};\n\nexport default function Links() {\n  return (\n    <div style={style}>\n      <Link name=\"Overview\" url=\"/overview\" selected={false} />\n      <Link name=\"Product Performance\" url=\"/performance\" selected={false} />\n      <Link name=\"Customer Health\" url=\"/health\" selected={true} />\n      <Link name=\"Bundle Processing\" url=\"/processing\" selected={false} />\n      <Link name=\"Team Performance\" url=\"/teamperformance\" selected={false} />\n      <Link name=\"Incidents\" url=\"/incidents\" selected={false} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Bar,\n  BarChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\n// data is hard-coded as an example, could easily be fetched via web request:\nconst exampleData = {\n  response: {\n    status: 200\n  },\n  data: [\n    {\n      name: \"0\",\n      \"Total Incidents\": 48,\n      Peritus: 0,\n      \"Non Peritus\": 48\n    },\n    {\n      name: \"1\",\n      \"Total Incidents\": 46,\n      Peritus: 0,\n      \"Non Peritus\": 46\n    },\n    {\n      name: \"2\",\n      \"Total Incidents\": 50,\n      Peritus: 0,\n      \"Non Peritus\": 45\n    },\n    {\n      name: \"3\",\n      \"Total Incidents\": 60,\n      Peritus: 5,\n      \"Non Peritus\": 55\n    },\n    {\n      name: \"4\",\n      \"Total Incidents\": 80,\n      Peritus: 40,\n      \"Non Peritus\": 40\n    },\n    {\n      name: \"5\",\n      \"Total Incidents\": 85,\n      Peritus: 60,\n      \"Non Peritus\": 25\n    },\n    {\n      name: \"6\",\n      \"Total Incidents\": 85,\n      Peritus: 60,\n      \"Non Peritus\": 25\n    },\n    {\n      name: \"7\",\n      \"Total Incidents\": 87,\n      Peritus: 62,\n      \"Non Peritus\": 25\n    },\n    {\n      name: \"8\",\n      \"Total Incidents\": 87,\n      Peritus: 70,\n      \"Non Peritus\": 17\n    },\n    {\n      name: \"9\",\n      \"Total Incidents\": 95,\n      Peritus: 80,\n      \"Non Peritus\": 15\n    },\n    {\n      name: \"10\",\n      \"Total Incidents\": 85,\n      Peritus: 80,\n      \"Non Peritus\": 5\n    },\n    {\n      name: \"11\",\n      \"Total Incidents\": 98,\n      Peritus: 94,\n      \"Non Peritus\": 4\n    }\n  ]\n};\n\nconst totalIncidents = exampleData.data.reduce((total, dataPoint) => {\n  return total + dataPoint[\"Total Incidents\"];\n}, 0);\n\nconst peritusIncidents = exampleData.data.reduce((total, dataPoint) => {\n  return total + dataPoint.Peritus;\n}, 0);\n\nexport default function PeritusAssistIncidentChart() {\n  return (\n    <div style={{ padding: 20, backgroundColor: \"#2D3034\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <h5>PERITUS ASSISTED INCIDENTS</h5>\n        <h5 style={{ color: \"#FE7626\" }}>Weekly v</h5>\n      </div>\n      <hr\n        style={{\n          border: \"0.5px solid\",\n          color: \"#383B3F\",\n          marginLeft: -20,\n          marginRight: -20\n        }}\n      />\n      <h4>{((peritusIncidents / totalIncidents) * 100).toFixed(2)}%</h4>\n      <h6>\n        {peritusIncidents} / {totalIncidents}\n      </h6>\n\n      <BarChart\n        width={700}\n        height={250}\n        data={exampleData.data}\n        margin={{\n          top: 20,\n          right: 80,\n          bottom: 20,\n          left: 20\n        }}\n        barCategoryGap={13}\n      >\n        <defs>\n          <linearGradient id=\"colorPeritus\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor=\"#c034f7\" stopOpacity={1} />\n            <stop offset=\"95%\" stopColor=\"#26d3fc\" stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid stroke=\"#4E5054\" vertical={false} />\n        <Tooltip />\n        <Legend />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Bar\n          type=\"monotone\"\n          dataKey=\"Peritus\"\n          stackId=\"a\"\n          stroke=\"#8884d8\"\n          fillOpacity={1}\n          fill=\"url(#colorPeritus)\"\n        />\n        {/* #5772F8 */}\n        <Bar dataKey=\"Non Peritus\" stackId=\"a\" fill=\"#FDBE02\" />\n      </BarChart>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport LeftNav from \"./LeftNav\";\nimport Links from \"./Links\";\nimport PeritusAssistIncidentChart from \"./PeritusAssistIncidentChart\";\n\nconst mainStyle = {\n  display: \"inline-block\",\n  verticalAlign: \"top\",\n  padding: 15\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <span>\n          <LeftNav />\n        </span>\n        <div style={mainStyle}>\n          <Links />\n          <h3>Acme Corp</h3>\n          <PeritusAssistIncidentChart />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}